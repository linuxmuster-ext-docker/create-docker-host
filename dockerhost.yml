- hosts: localhost
  vars:
    debian_flavor: ubuntu

    compose_version: 1.23.2

    required_packages:
      - ufw
      - curl
      - apt-transport-https 
      - ca-certificates
      - gnupg2 
      - software-properties-common
      - fail2ban
      - vim
      - nginx
      - dehydrated
    
    docker_packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io

    common_optional_packages:
      - vim

    common_ssh_port: 22

  tasks:
    - name: get lsb_release
      shell: lsb_release -cs
      register: release
    - set_fact:
           lsb_release={{ release.stdout }}
    
    - name: Get system type
      shell: uname -s
      register: unames
    - set_fact: 
           system={{ unames.stdout }}

    - name: Get system architecture 
      shell: uname -m
      register: unamem
    - set_fact:
           arch={{ unamem.stdout }}


    - name: Update APT package cache
      apt: update_cache=yes

    - name: Upgrade APT to the latest packages
      apt: upgrade=safe

    - name: Install required packages
      apt: state=present pkg={{ item }}
      with_items: "{{ required_packages }}"
    
    - name: Get repository key for docker repository
      apt_key:
        url: https://download.docker.com/linux/debian/gpg 
        state: present
    
    - name: Add docker repository to sources.list
      command: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/{{ debian_flavor }} {{ lsb_release }} stable"

    - name: Update APT package cache
      apt: update_cache=yes
    
    - name: Install docker packages
      apt: state=present pkg={{ item }}
      with_items: "{{ docker_packages }}"

    - name: Get docker compose
      get_url: 
        url: https://github.com/docker/compose/releases/download/{{ compose_version }}/docker-compose-{{ system }}-{{ arch }}
        dest: /usr/local/bin/docker-compose
        mode: 0755

    - name: Disallow ssh password authentication
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PasswordAuthentication"
                  line="PasswordAuthentication no"
                  state=present
      notify: Restart ssh

    - name: Disallow root SSH access with passwords
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PermitRootLogin"
                  line="PermitRootLogin without-password"
                  state=present
      notify: Restart ssh

    - name: Create WellKnown directory for dehydrated challenges 
      file:
         path: /var/www/dehydrated
         state: directory
         owner: www-data
         group: www-data
         mode: 0755

    - name: Set WELLKNOWN for dehydrated
      lineinfile: dest=/etc/dehydrated/config
                  regexp="^WELLKNOWN"
                  line="WELLKNOWN=/var/www/dehydrated"
                  state=present
      notify: Restart ssh

    - name: Insert .wellknown alias into nginx configuration
      blockinfile:
        path: /etc/nginx/sites-available/default
        marker: "## {mark} ANSIBLE MANAGED BLOCK"
        insertafter: "server_name _;"
        content: |
          location ^~ /.well-known/acme-challenge {
              alias /var/www/dehydrated;
          }
      notify: Restart nginx



    - name: Creating cronjob for dehydrated
      template: src=./files/dehydrated.cron.daily dest=/etc/cron.daily/dehydrated
      

  handlers:
    - name: Restart ssh
      service: name=ssh state=restarted
    - name: Restart nginx
      service: name=nginx state=restarted
        

